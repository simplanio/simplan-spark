simplan {
  application{
    name ="ReadJsonAndPerformSQLOperation"
  }
  tasks {
    order = [
      personalInfo,
      workingInfo,
      SqlStepToJoinAndFilter
    ]
    dag {
      personalInfo {
        action {
          operator = com.intuit.data.simplan.spark.core.operators.sources.batch.ClasspathJsonBatchSource
          config = {
            tableType = TEMP
            schema = schemaJson("classpath:data/sample/schema/personal.schema.json")
            location = /data/sample/personal.json
          }
        }
      }
      workingInfo {
        action {
          operator = com.intuit.data.simplan.spark.core.operators.sources.batch.ClasspathJsonBatchSource
          config = {
            tableType = TEMP
            schema = schemaJson("classpath:data/sample/schema/address.schema.json")
            location = /data/sample/address.json
          }
        }
      }
      SqlStepToJoinAndFilter {
        action {
          operator = SqlStatementDMLExecutor
          config = {
            tableType = TEMP
           sql = """
           select cast(id as int),
                concat(firstName, ' ', lastName) as fullName,
                location
           from personalInfo p
                inner join workingInfo w on p.id == w.personId
           where workingOn = 'Simplan'
            """
          }
        }
      }
    }
  }
}